#!/bin/sh

# PROVIDE: weenas_api
# REQUIRE: LOGIN
# KEYWORD: shutdown
#
# Add these lines to /etc/rc.conf.local or /etc/rc.conf to enable weenas_api:
#
# weenas_api_enable (boolen):	NO by default. Set to YES to enable.
# weenas_api_home (path):	/root/WeeNAS by default. Set to the parent
#				path of weenas-api.js.
# weenas_api_port (integer):	9000 by default. Set to desired tcp port
#				number or blank to disable the REST API.
#
# An example of WeeNAS installed into /home/weenas and accepting REST API
# connections on port 8080 instead of 9000:
#
# sysrc weenas_api_enable="YES"
# sysrc weenas_api_home=/home/weenas
# sysrc weenas_api_port=8080
#

# Source rc functions.
. /etc/rc.subr

# Set config variables and their defaults.
load_rc_config $name
: ${weenas_api_enable:=no}
: ${weenas_api_home:=/root/WeeNAS}

name="weenas_api"
desc="WeeNAS API"
rcvar=weenas_api_enable
command_interpreter=node
command=${weenas_api_home}/${name}.js
command_args="${weenas_api_home}/${name}.js ${weenas_api_port}"
pidfile=/var/run/${name}.pid
pid=`/bin/pgrep -F /var/run/${name}.pid 2>/dev/null`

start_cmd="${name}_start"
stop_cmd="${name}_stop"
status_cmd="${name}_status"

weenas_api_start()
{
  if [ "$pid" == "" ]; then
    /usr/local/bin/${command_interpreter} ${command_args} >>/var/log/${name}.log 2>&1 &
  else
    echo "${name} is already running as PID: $pid."
  fi
}

weenas_api_status()
{
  if [ "$pid" != "" ]; then
    echo "${name} is running as PID: $pid."
  else
    echo "${name} is not running."
  fi
}

weenas_api_stop()
{
  if [ "$pid" != "" ]; then
    /bin/pkill -F /var/run/${name}.pid
  else
    echo "${name} is not running."
  fi
}

run_rc_command "$1"

